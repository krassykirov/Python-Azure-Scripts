import logging,requests,os
import azure.functions as func

def main(req: func.HttpRequest) -> func.HttpResponse:
    logging.info('Python HTTP trigger function processed a request.')
    try:
            endpoint= req.get_json()['endpoint']
            logging.info(endpoint)
            url = 'https://login.microsoftonline.com/{tenant}.onmicrosoft.com/oauth2/v2.0/token'
            data = {
                'grant_type': 'password',
                'client_id': os.getenv('client_id'),
                'scope': 'https://graph.microsoft.com/.default',
                'client_secret': os.getenv('client_secret'),
                'username': os.getenv('user_name'),
                'password': os.getenv('password')
            }
            resp = requests.post(url, data=data)
            token = resp.json().get('access_token')
            headers = {'Authorization': 'Bearer {}'.format(token)}
            graphdata = requests.get(endpoint, headers=headers).text

            return func.HttpResponse(graphdata)

    except Exception as error:
            logging.info(error)
            
################### Calling the Azure Function with Graph Query ###################
''' Calling the Azure Function with Graph Query
# https://graph.microsoft.com/v1.0/users/{some_user}@{tenant}.onmicrosoft.com/messages?$select=sender,subject
graph_query = 'https://graph.microsoft.com/v1.0/users'
func_url = 'https://{function_name}.azurewebsites.net/api/get_msgraph_data'
data = {'endpoint': graph_query}
r = requests.post(func_url, data=json.dumps(data)).json()
print(r)
users = []
for k, v in r.items():
    users.append(k)
    users.append(v)

user_values = users[3]
en = enumerate(user_values,0)
for us in en:
    print(us)
'''
############### ODATA NEXT LINK ###############
endpoint= 'https://graph.microsoft.com/v1.0/users/user@tenant.onmicrosoft.com/messages?$select=sender,subject,receivedDateTime'
url = 'https://login.microsoftonline.com/tenant.onmicrosoft.com/oauth2/v2.0/token'
 data = {
                'grant_type': 'password',
                'client_id': os.getenv('client_id'),
                'scope': 'https://graph.microsoft.com/.default',
                'client_secret': os.getenv('client_secret'),
                'username': os.getenv('user_name'),
                'password': os.getenv('password')
            }
resp = requests.post(url, data=data)
token = resp.json().get('access_token')
headers = {'Authorization': 'Bearer {}'.format(token)}
msg_response_data = json.loads(requests.get(endpoint, headers=headers).text)
print(msg_response_data)
messages = []
for msg in msg_response_data['value']:
    messages.append(msg['sender']['emailAddress']['address'])
    messages.append(msg['subject'])
    messages.append(msg['receivedDateTime'])

while '@odata.nextLink' in msg_response_data:
    msg_response_data = json.loads(requests.get(endpoint, headers=headers).text)
    if '@odata.nextLink' in msg_response_data:
        endpoint  = msg_response_data['@odata.nextLink']
        for msg in msg_response_data['value']:
            messages.append(msg['sender']['emailAddress'])
            messages.append(msg['subject'])
            messages.append(msg['receivedDateTime'])

for msg in messages:
    print(msg)
